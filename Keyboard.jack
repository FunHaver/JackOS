// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack
/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(24576);
    }

    /**	Waits until a key is pressed on the keyboard and released,
     *  then echoes the key to the screen, and returns the character 
     *  of the pressed key. */
    function char readChar() {
        var char keycode;
        do Output.printCursor();
        while(keycode = 0){
            let keycode = Keyboard.keyPressed();
        }
        while(~(Keyboard.keyPressed() = 0)){
            //noop
        }
        if(~(keycode = 129) & ~(keycode = 128)){
            do Output.clearCell();
            do Output.printChar(keycode);
        }
        return keycode;
        
    }

    /**	Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its value. Also handles user backspaces. */
    function String readLine(String message) {
        var char keycode;
        var int i;
        var String input;
        do Output.printString(message);
        let input = String.new(255);
        while(~(keycode = 128)){
            let keycode = Keyboard.readChar();
            if((keycode > 31) & (keycode < 127)){
                do input.appendChar(keycode);
                let i = i + 1;
                let keycode = 0;
            }

            if(keycode = 129){
                if(input.length() > 0){
                    do Output.backSpace();
                    let i = i - 1;
                    do input.eraseLastChar();
                    let keycode = 0;
                }
            }
        }
        do Output.println();
        return input;
    }   

    /** Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its integer value (until the first non-digit character in the
     *  entered text is detected). Also handles user backspaces. */
    function int readInt(String message) {
        var char keycode;
        var int i;
        var String input;
        do Output.printString(message);
        let input = String.new(6);

        while(~(keycode = 128)){
            let keycode = Keyboard.readChar();
            if((keycode > 31) & (keycode < 127)){
                do input.appendChar(keycode);
                let i = i + 1;
                let keycode = 0;
            }

            if(keycode = 129){
                if(input.length() > 0){
                    do Output.backSpace();
                    let i = i - 1;
                    do input.eraseLastChar();
                    let keycode = 0;
                }
            }
        }
        do Output.println();
        return input.intValue();
    }
}
